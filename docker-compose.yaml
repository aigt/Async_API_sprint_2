version: '3'
services:

  db:
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - .:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  service:
    build: movies_api
    ports:
      - "8000:8000"
    env_file:
      - ./env_files/elastic.env
      - ./env_files/redis.env
      - ./env_files/movies_api.env
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  etl:
    build: ETL
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - ELASTIC_PATH=${ELASTIC_PATH:-http://elasticsearch:9200}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    image: bitnami/elasticsearch:latest
    environment:
      - discovery.type=single-node
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - '6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  postgres_data:
  elastic-data:
