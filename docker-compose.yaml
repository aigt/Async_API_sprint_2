version: '3'
services:

  db:
    image: postgres:15.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgres/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - ./postgres/schema:/movies/schema
      - ./postgres/dump:/movies/dump
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    expose:
      - '5432'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $$POSTGRES_DB -h $$POSTGRES_HOST -p $$POSTGRES_PORT -U $$POSTGRES_USER"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  service:
    build: movies_api
    expose:
      - "8000"
    env_file:
      - env_files/elastic.env.example
      - env_files/redis.env.example
      - env_files/movies_api.env.example
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://service:8000/api/health/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 20

  etl:
    build: etl
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - ELASTIC_PATH=http://elasticsearch:9200
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    image: bitnami/elasticsearch:latest
    environment:
      - discovery.type=single-node
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    expose:
      - "9200"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - '6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./data:/data/

    depends_on:
      - service
    ports:
      - "80:8000"

volumes:
  postgres_data:
  elastic-data:
